{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "properties": {
    "service": {
      "description": "Service specific configuration",
      "type": "object",
      "properties": {
        "image": {
          "description": "docker image",
          "type": "object",
          "properties": {
            "version": {
              "description": "supported versions",
              "type": "string",
              "listEnum": [
                "ghcr.io/alexis-barge/veros-edito:latest"
              ],
              "render": "list",
              "pattern": "^[a-z0-9-_./]+(:[a-z0-9-_.]+)?$",
              "default": "ghcr.io/alexis-barge/veros-edito:latest"
            }
          }
        }
      }
    },
    "resources": {
      "description": "Your service will have at least the requested resources and never more than its limits. No limit for a resource and you can consume everything left on the host machine.",
      "type": "object",
      "x-onyxia": {
        "overwriteSchemaWith": "ide/resources.json"
      },
      "properties": {
        "requests": {
          "description": "Guaranteed resources",
          "type": "object",
          "properties": {
            "cpu": {
              "description": "The amount of cpu guaranteed",
              "title": "CPU",
              "type": "string",
              "default": "100m",
              "render": "slider",
              "sliderMin": 50,
              "sliderMax": 1000,
              "sliderStep": 50,
              "sliderUnit": "m",
              "sliderExtremity": "down",
              "sliderExtremitySemantic": "guaranteed",
              "sliderRangeId": "cpu",
              "x-onyxia": {
                "overwriteDefaultWith": "region.resources.cpuRequest",
                "useRegionSliderConfig": "cpu"
              }
            },
            "memory": {
              "description": "The amount of memory guaranteed",
              "title": "memory",
              "type": "string",
              "default": "2Gi",
              "render": "slider",
              "sliderMin": 1,
              "sliderMax": 8,
              "sliderStep": 1,
              "sliderUnit": "Gi",
              "sliderExtremity": "down",
              "sliderExtremitySemantic": "guaranteed",
              "sliderRangeId": "memory",
              "x-onyxia": {
                "overwriteDefaultWith": "region.resources.memoryRequest",
                "useRegionSliderConfig": "memory"
              }
            }
          }
        },
        "limits": {
          "description": "max resources",
          "type": "object",
          "properties": {
            "cpu": {
              "description": "The maximum amount of cpu",
              "title": "CPU",
              "type": "string",
              "default": "1000m",
              "render": "slider",
              "sliderMin": 50,
              "sliderMax": 1000,
              "sliderStep": 50,
              "sliderUnit": "m",
              "sliderExtremity": "up",
              "sliderExtremitySemantic": "Maximum",
              "sliderRangeId": "cpu",
              "x-onyxia": {
                "overwriteDefaultWith": "region.resources.cpuLimit",
                "useRegionSliderConfig": "cpu"
              }
            },
            "memory": {
              "description": "The maximum amount of memory",
              "title": "Memory",
              "type": "string",
              "default": "4Gi",
              "render": "slider",
              "sliderMin": 1,
              "sliderMax": 8,
              "sliderStep": 1,
              "sliderUnit": "Gi",
              "sliderExtremity": "up",
              "sliderExtremitySemantic": "Maximum",
              "sliderRangeId": "memory",
              "x-onyxia": {
                "overwriteDefaultWith": "region.resources.memoryLimit",
                "useRegionSliderConfig": "memory"
              }
            }
          }
        }
      }
    },
    "ingress": {
      "type": "object",
      "form": true,
      "title": "Ingress Details",
      "properties": {
        "enabled": {
          "description": "Enable Ingress",
          "type": "boolean",
          "default": true,
          "x-onyxia": {
            "overwriteDefaultWith": "k8s.ingress"
          }
        },
        "hostname": {
          "type": "string",
          "pattern": "^[-a-zA-Z0-9@:%_\\+~#=]{1,100}\\.lab\\.(dive|staging)\\.edito\\.eu$",
          "form": true,
          "title": "Hostname",
          "x-form": {
            "hidden": true,
            "value": "{{project.id}}-{{k8s.randomSubdomain}}-0.{{k8s.domain}}"
          },
          "x-onyxia": {
            "hidden": true,
            "overwriteDefaultWith": "{{project.id}}-{{k8s.randomSubdomain}}-0.{{k8s.domain}}"
          }
        }
      }
    },
    "global": {
      "description": "Suspend",
      "type": "object",
      "properties": {
        "suspend": {
          "type": "boolean",
          "description": "Suspend this service",
          "default": false,
          "x-onyxia": {
            "hidden": true
          }
        }
      }
    }
  }
}
